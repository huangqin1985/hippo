<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cc.fxqq.hippo.dao.ext.TradeFundExtMapper">

	<resultMap id="BaseResultMap" type="cc.fxqq.hippo.entity.TradeFund">
	    <id column="id" jdbcType="INTEGER" property="id" />
	    <result column="account_id" jdbcType="INTEGER" property="accountId" />
	    <result column="ticket" jdbcType="VARCHAR" property="ticket" />
	    <result column="open_time" jdbcType="VARCHAR" property="openTime" />
	    <result column="profit" jdbcType="DECIMAL" property="profit" />
	    <result column="type" jdbcType="VARCHAR" property="type" />
	    <result column="comment" jdbcType="VARCHAR" property="comment" />
	  </resultMap>
	  
	<resultMap id="fundSumResult" type="cc.fxqq.hippo.entity.result.FundSumResult">
	    <result column="profit" jdbcType="DECIMAL" property="profit" />
	    <result column="lots" jdbcType="DECIMAL" property="lots" />
	    <result column="order_num" jdbcType="INTEGER" property="orderNum" />
	</resultMap>
	
	<sql id="cond">
		where
			account_id = #{accountId}
			<if test="type != null and type != null">
				and type = #{type}
			</if>
			<if test="startDate != null and endDate != null">
              and date(open_time) BETWEEN #{startDate} and #{endDate}
            </if>
	</sql>
	
	<select id="selectTotal" parameterType="cc.fxqq.hippo.entity.param.TradeFundParam"
		 resultType="int">
		select
			count(*)
		from
			trade_fund
			<include refid="cond" />
	</select>
	
	<select id="selectPage" parameterType="cc.fxqq.hippo.entity.param.TradeFundParam"
		 resultMap="BaseResultMap">
		select
			*
		from
			trade_fund
			<include refid="cond" />
            <if test="orderBy != null">
				order by ${orderBy}
			</if>
            <if test="page != null">
            	 limit #{startRecord} , #{rows}
            </if>
	</select>
  
   <insert id="replaceBatch">
        replace into trade_fund (
        	`account_id`,
        	`ticket`,
        	`open_time`,
        	`profit`,
        	`type`,
        	`comment`
        	)
        VALUES
        <foreach collection="list" close="" index="index" item="item" open="" separator=",">
        	(
        		#{item.accountId},
        		#{item.ticket},
        		#{item.openTime},
        		#{item.profit},
        		#{item.type},
        		#{item.comment}
        	)
        </foreach>
    </insert>
	
	<select id="selectProfitByType" resultType="java.math.BigDecimal">
		select
			sum(profit) as profit
		from
			trade_fund
		where
			account_id = #{accountId}
			<if test="type != null">
			and type = #{type}
			</if>
			<if test="startDate != null and endDate != null">
              and date(open_time) BETWEEN #{startDate} and #{endDate}
            </if>
	</select>
	
	<select id="selectSumByType" resultMap="fundSumResult">
		select
			type,
			sum(profit) as profit
		from
			trade_fund
		where
			account_id = #{accountId}
			<if test="startDate != null and endDate != null">
              and date(open_time) BETWEEN #{startDate} and #{endDate}
            </if>
		group by
			type
	</select>
	
	<select id="selectTradeOpenTime" resultType="string">
		select min(open_time) from trade_fund where account_id = #{accountId}
	</select>
	
</mapper>