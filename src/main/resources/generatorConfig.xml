<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <!--导入属性配置-->
    <!-- context 是逆向工程的主要配置信息 -->
    <!-- id：name -->
    <!-- targetRuntime：设置生成的文件适用于那个 mybatis 版本 -->
    <context id="default" targetRuntime="MyBatis3">

        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>
        <property name="javaFileEncoding" value="UTF-8"/>
        <!-- 为模型生成序列化方法-->
        <!-- <plugin type="org.mybatis.generator.plugins.SerializablePlugin"/>  -->
        <!-- 为生成的Java模型创建一个toString方法 -->
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin"/>
          <!--生成mapper.xml时覆盖原文件-->
        <plugin type="org.mybatis.generator.plugins.UnmergeableXmlMappersPlugin" />

        <!-- optional，旨在创建class时，对注释进行控制 -->
        <commentGenerator>
            <property name="suppressDate" value="true"/>
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>

        <!--jdbc的数据库连接
        URL后加的参数可以减少报错，&连接需要做转义，SSL版本高需要声明-->
        <jdbcConnection
                driverClass="org.sqlite.JDBC"
                connectionURL="jdbc:sqlite:hippo.db">
            <property name="useInformationSchema" value="true"/>
        </jdbcConnection>

        <!-- 非必需，类型处理器，在数据库类型和java类型之间的转换控制-->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="true"/>
        </javaTypeResolver>

        <!-- Model模型生成器,用来生成含有主键key的类，记录类 以及查询Example类
            targetPackage     指定生成的model生成所在的包名
            targetProject     指定在该项目下所在的路径
        -->
        <!--<javaModelGenerator targetPackage="com.mmall.pojo" targetProject=".\src\main\java">-->
        <javaModelGenerator targetPackage="cc.fxqq.hippo.entity" targetProject="./src/main/java">
            <!-- 是否允许子包，即targetPackage.schemaName.tableName -->
            <property name="enableSubPackages" value="true"/>
            <!-- 是否对model添加 构造函数，如果为true则不会生成ResultMap -->
            <property name="constructorBased" value="false"/>
            <!-- 是否对类CHAR类型的列的数据进行trim操作 -->
            <property name="trimStrings" value="true"/>
            <!-- 建立的Model对象是否 不可改变  即生成的Model对象不会有 setter方法，只有构造方法 -->
            <property name="immutable" value="false"/>
        </javaModelGenerator>

        <!--mapper映射文件生成所在的目录 为每一个数据库的表生成对应的SqlMap文件 -->
        <!--<sqlMapGenerator targetPackage="mappers" targetProject=".\src\main\resources">-->
        <sqlMapGenerator targetPackage="mappers" targetProject="./src/main/resources">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>

        <!-- 客户端代码，生成易于使用的针对Model对象和XML配置文件 的代码
                type="ANNOTATEDMAPPER",生成Java Model 和基于注解的Mapper对象
                type="MIXEDMAPPER",生成基于注解的Java Model 和相应的Mapper对象
                type="XMLMAPPER",生成SQLMap XML文件和独立的Mapper接口
        -->
        <!-- targetPackage：mapper接口dao生成的位置 -->
        <!--<javaClientGenerator type="XMLMAPPER" targetPackage="com.mmall.dao" targetProject=".\src\main\java">-->
        <javaClientGenerator type="XMLMAPPER" targetPackage="cc.fxqq.hippo.dao" targetProject="./src/main/java">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>

        <!--生成的表-->
        <!--domainObjectName：生成的domain类的名字，如果不设置，直接使用表名作为domain类的名字；可以设置为somepck.domainName，那么会自动把domainName类再放到somepck包里面；-->
        <!--enableInsert（默认true）：指定是否生成insert语句；-->
        <!--enableSelectByPrimaryKey（默认true）：指定是否生成按照主键查询对象的语句（就是getById或get）；-->
        <!--enableSelectByExample（默认true）：MyBatis3Simple为false，指定是否生成动态查询语句；-->
        <!--enableUpdateByPrimaryKey（默认true）：指定是否生成按照主键修改对象的语句（即update)；-->
        <!--enableDeleteByPrimaryKey（默认true）：指定是否生成按照主键删除对象的语句（即delete）；-->
        <!--enableDeleteByExample（默认true）：MyBatis3Simple为false，指定是否生成动态删除语句；-->
        <!--enableCountByExample（默认true）：MyBatis3Simple为false，指定是否生成动态查询总条数语句（用于分页的总条数查询）；-->
        <!--enableUpdateByExample（默认true）：MyBatis3Simple为false，指定是否生成动态修改语句（只修改对象中不为空的属性）；-->
        <table tableName="account" domainObjectName="Account"
        	   enableCountByExample="false"
        	   enableSelectByExample="false"
               enableDeleteByExample="false"
               enableUpdateByExample="false">
               
               <generatedKey column="id" sqlStatement="select last_insert_rowid()" identity="true"/>
               
               <columnOverride column="balance" jdbcType="DECIMAL" javaType="java.math.BigDecimal"></columnOverride>
        </table>
        <table tableName="trade_fund" domainObjectName="TradeFund"
        		enableCountByExample="false"
        	   enableSelectByExample="false"
               enableDeleteByExample="false"
               enableUpdateByExample="false">
               
               <columnOverride column="profit" jdbcType="DECIMAL" javaType="java.math.BigDecimal"></columnOverride>
        </table>
        <table tableName="trade_order" domainObjectName="TradeOrder"
              enableCountByExample="false"
        	   enableSelectByExample="false"
               enableDeleteByExample="false"
               enableUpdateByExample="false">
               <columnOverride column="lots" jdbcType="DECIMAL" javaType="java.math.BigDecimal"></columnOverride>
               <columnOverride column="commission" jdbcType="DECIMAL" javaType="java.math.BigDecimal"></columnOverride>
               <columnOverride column="swap" jdbcType="DECIMAL" javaType="java.math.BigDecimal"></columnOverride>
               <columnOverride column="profit" jdbcType="DECIMAL" javaType="java.math.BigDecimal"></columnOverride>
               <columnOverride column="real_profit" jdbcType="DECIMAL" javaType="java.math.BigDecimal"></columnOverride>
        </table>
        
        <table tableName="report" domainObjectName="Report"
               enableCountByExample="false"
        	   enableSelectByExample="false"
               enableDeleteByExample="false"
               enableUpdateByExample="false">
               <columnOverride column="pre_balance" jdbcType="DECIMAL" javaType="java.math.BigDecimal"></columnOverride>
               <columnOverride column="pre_equity" jdbcType="DECIMAL" javaType="java.math.BigDecimal"></columnOverride>
               <columnOverride column="balance" jdbcType="DECIMAL" javaType="java.math.BigDecimal"></columnOverride>
               <columnOverride column="equity" jdbcType="DECIMAL" javaType="java.math.BigDecimal"></columnOverride>
               <columnOverride column="real_profit" jdbcType="DECIMAL" javaType="java.math.BigDecimal"></columnOverride>
               <columnOverride column="commission" jdbcType="DECIMAL" javaType="java.math.BigDecimal"></columnOverride>
        	   <columnOverride column="swap" jdbcType="DECIMAL" javaType="java.math.BigDecimal"></columnOverride>
        	   <columnOverride column="profit" jdbcType="DECIMAL" javaType="java.math.BigDecimal"></columnOverride>
        	   <columnOverride column="lots" jdbcType="DECIMAL" javaType="java.math.BigDecimal"></columnOverride>
        	   <columnOverride column="deposit" jdbcType="DECIMAL" javaType="java.math.BigDecimal"></columnOverride>
        	   <columnOverride column="withdraw" jdbcType="DECIMAL" javaType="java.math.BigDecimal"></columnOverride>
        	   <columnOverride column="other" jdbcType="DECIMAL" javaType="java.math.BigDecimal"></columnOverride>
        	   <columnOverride column="max_equity" jdbcType="DECIMAL" javaType="java.math.BigDecimal"></columnOverride>
			   <columnOverride column="min_equity" jdbcType="DECIMAL" javaType="java.math.BigDecimal"></columnOverride>
        	   <columnOverride column="max_real_profit" jdbcType="DECIMAL" javaType="java.math.BigDecimal"></columnOverride>
        	   <columnOverride column="min_real_profit" jdbcType="DECIMAL" javaType="java.math.BigDecimal"></columnOverride>
        	   <columnOverride column="max_profit" jdbcType="DECIMAL" javaType="java.math.BigDecimal"></columnOverride>
        	   <columnOverride column="min_profit" jdbcType="DECIMAL" javaType="java.math.BigDecimal"></columnOverride>
        	   <columnOverride column="max_margin" jdbcType="DECIMAL" javaType="java.math.BigDecimal"></columnOverride>
        	   <columnOverride column="min_margin_rate" jdbcType="DECIMAL" javaType="java.math.BigDecimal"></columnOverride>
        </table>
        
    </context>
</generatorConfiguration>
